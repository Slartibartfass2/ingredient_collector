name: Code Quality Checks

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  flutter_version: ${{ vars.FLUTTER_VERSION }}

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: 'stable'
          cache: true

      - name: Run setup script
        run: bash setup.ps1

      - name: Verify formatting
        run: |
          dart format . --fix
          git diff --exit-code

  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: 'stable'
          cache: true

      - name: Run setup script
        run: bash setup.ps1

      - name: Analyze project source
        run: |
          flutter analyze --suggestions
          dart run dart_code_metrics:metrics analyze lib test --reporter=github
          dart run dart_code_metrics:metrics check-unused-files lib
          dart run dart_code_metrics:metrics check-unused-code lib

  spell-checking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: 'stable'
          cache: true

      - name: Run setup script
        run: bash setup.ps1

      - name: Check spelling
        uses: crate-ci/typos@v1.29.4
        with:
          config: .github/typos.toml

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: 'stable'
          cache: true

      - name: Run setup script
        run: bash setup.ps1

      - name: Run tests
        run: |
          flutter test --coverage --branch-coverage --reporter=github --test-randomize-ordering-seed random
          dart run test_cov_console -e lib/l10n/locale_keys.g.dart

      - name: Upload code coverage
        uses: codecov/codecov-action@v5
        with:
          directory: coverage
          fail_ci_if_error: true
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
