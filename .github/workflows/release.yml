name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  flutter_version: ${{ vars.FLUTTER_VERSION }}
  java_version: ${{ vars.JAVA_VERSION }}
  java_distribution: ${{ vars.JAVA_DISTRIBUTION }}

jobs:
  build-windows-release:
    name: Release build for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Windows release
        uses: ./.github/workflows/build-windows/
        with:
          flutter_version: ${{ env.flutter_version }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-release-artifacts
          path: "build/windows/x64/runner/Release/**"
          if-no-files-found: error

  build-web-release:
    name: Release build for Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Web release
        uses: ./.github/workflows/build-web/
        with:
          flutter_version: ${{ env.flutter_version }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-release-artifacts
          path: "build/web/**"
          if-no-files-found: error

  build-android-release:
    name: Release build for Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Android release
        uses: ./.github/workflows/build-android/
        with:
          flutter_version: ${{ env.flutter_version }}
          java_version: ${{ env.java_version }}
          java_distribution: ${{ env.java_distribution }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release-artifacts
          path: |
            build/app/outputs/bundle/release/**
            build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error

  build-linux-release:
    name: Release build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Linux release
        uses: ./.github/workflows/build-linux/
        with:
          flutter_version: ${{ env.flutter_version }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-release-artifacts
          path: build/linux/x64/release/bundle/**
          if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build-windows-release
      - build-web-release
      - build-android-release
      - build-linux-release
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Windows
      - name: Get windows release artifact
        uses: actions/download-artifact@v5
        with:
          name: windows-release-artifacts
          path: windows-release/

      - name: Zip windows build files
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r windows-release.zip windows-release

      # Web
      - name: Get web release artifact
        uses: actions/download-artifact@v5
        with:
          name: web-release-artifacts
          path: web-release/

      - name: Zip web build files
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r web-release.zip web-release

      # Android
      - name: Get android release artifact
        uses: actions/download-artifact@v5
        with:
          name: android-release-artifacts
          path: android-release/

      - name: Zip android build files
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r android-release.zip android-release

      # Linux
      - name: Get linux release artifact
        uses: actions/download-artifact@v5
        with:
          name: linux-release-artifacts
          path: linux-release/

      - name: Zip linux build files
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r linux-release.zip linux-release

      # Release
      - name: Release
        uses: docker://antonyurchenko/git-release:v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: |
            windows-release.zip
            web-release.zip
            android-release.zip
            linux-release.zip

  deploy-web:
    name: Deploy web release on GitHub Pages
    runs-on: ubuntu-latest
    needs:
      - "release"
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Get web release artifact
        uses: actions/download-artifact@v5
        with:
          name: web-release-artifacts
          path: .

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
